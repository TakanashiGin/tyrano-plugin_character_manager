class Character{constructor(a,t,e,r,s,c,h){this.name=a,this.jname=t,this.storage=e,this.width=r,this.height=s,this.reflect=c,this.color=h,this.map_face={},this.face=[]}addTyrano(){let a=$.isHTTP(this.storage)?this.storage:"./data/fgimage/"+this.storage;this.map_face.default=this.storage,TYRANO.kag.preload(a),TYRANO.kag.stat.charas[this.name]={name:this.name,jname:this.jname,storage:this.storage,width:this.width,height:this.height,reflect:this.reflect,color:this.color,map_face:this.map_face},this.jname&&(TYRANO.kag.stat.jcharas[this.jname]=this.name)}}class NormalCharacter extends Character{constructor(a,t,e,r,s,c,h){super(a,t,e,r,s,c,h)}setFace(a,t){this.face.push({name:a,url:t})}addFace(a){TYRANO.kag.stat.charas[this.name].map_face[a.name]=a.url}}class PartsCharacter extends Character{constructor(a,t,e,r,s,c,h){super(a,t,e,r,s,c,h),this.face_layer=[]}setLayer(a,t,e,r){this.face_layer.push({name:this.name,part:a||"",id:t||"",storage:e||"",zindex:r||""})}addLayer(a){let t=TYRANO.kag.stat.charas[a.name];if(!t)return void console.error(`[ERROR] The specified character ${a.name} is not defined. Please define it in [chara_new].`);let e={};t._layer?e=t._layer:t._layer={};let r={},s=!1;e[a.part]?r=e[a.part]:(s=!0,t._layer[a.part]={default_part_id:a.id,current_part_id:a.id,zindex:a.zindex});let c={};r[a.id]?c=r[a.id]:(c={storage:"",zindex:""}).visible=s?"true":"false",t._layer[a.part][a.id]=$.extendParam(a,c)}}class CharacterManager{constructor(a,t){const e=t;"parts"==a?(this.characters=[],Object.keys(e).forEach(a=>{const t=e[a];let r=[a],s=[];Object.keys(t).forEach(a=>{"param"==a?Object.keys(t.param).forEach(a=>r.push(t.param[a])):Object.keys(t[a].face).forEach(e=>{let r=[a,e,t[a].face[e],t[a].zindex];s.push(r)})}),r=r.map(a=>"none"==a?null:a);let c=new PartsCharacter(...r);s.forEach(a=>c.setLayer(...a)),this.characters.push(c)}),this.characters.forEach(a=>{a.addTyrano(),a.face_layer.forEach(t=>a.addLayer(t))})):(this.chara_datas=[],this.characters=[],Object.keys(e).forEach(a=>{const t=e[a];let r=[];r.push(a),Object.keys(t.param).forEach(a=>r.push(t.param[a]));let s=[];Object.keys(t.face).forEach(a=>s.push([a,t.face[a]])),this.chara_datas.push({data:r,face:s})}),this.chara_datas.forEach(a=>{a.data=a.data.map(a=>"none"==a?null:a);let t=new NormalCharacter(...a.data);a.face.forEach(a=>t.setFace(...a)),this.characters.push(t)}),this.characters.forEach(a=>{a.addTyrano(),0!=a.face.length&&a.face.forEach(t=>a.addFace(t))}))}}tyrano.plugin.kag.tag.character_manager={vital:["src"],pm:{type:"normal",var:"sf.character_manager",time:"10"},start:function(a){const t=this,e=parseInt(a.time)<=0?10:parseInt(a.time),r=`./data/others/${a.src}`;$.getJSON(r,r=>{setTimeout(()=>t.kag.tag.character_manager.instanceCharacter(a,r),e)})},instanceCharacter:function(pm,json_data){const that=TYRANO,sf=that.kag.variable.sf,f=that.kag.stat.f,tf=that.kag.variable.tf,mp=that.kag.stat.mp;let c=new CharacterManager(pm.type,json_data);pm.var&&eval(`${pm.var} = c`),that.kag.ftag.nextOrder()}},function(){const a="character_manager";tyrano.plugin.kag.ftag.master_tag[a]=object(tyrano.plugin.kag.tag[a]),tyrano.plugin.kag.ftag.master_tag[a].kag=TYRANO.kag}();